{"ast":null,"code":"var _jsxFileName = \"/Users/christiancurry/Documents/abstract_clock/src/ClockUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClockUI(props) {\n  _s();\n\n  let clockClass = \"error\";\n\n  if (props.isWider) {\n    clockClass = \"wideClock\";\n  } else {\n    clockClass = \"tallClock\";\n  }\n\n  const [clockStyle, setClockStyle] = useState(1);\n  const draw = useCallback(() => {\n    let size = props.size * 2;\n    let outerLineWidth = size / 180;\n    let outerLineLength = 80;\n    let secondHandSize = size / 30;\n    let secondHandDistance = size - secondHandSize;\n    let minuteHandSize = secondHandSize * 2;\n    let minuteHandDistance = size - secondHandSize * 2 - minuteHandSize;\n    let hourHandSize = minuteHandSize * (Math.PI / 2);\n    let hourHandDistance = size / 2 - secondHandSize * 2 - minuteHandSize;\n    let can = document.getElementById(\"clock\");\n    let ctx = can.getContext(\"2d\");\n    ctx.canvas.width = size;\n    ctx.canvas.height = size;\n\n    if (clockStyle == 1) {\n      //This is the spinning outer ring\n      drawRing(ctx); //Spinning dot is annoying ish\n      //It Matches the spinning ring but seems excessive\n      //drawSpinningDot(ctx);\n\n      drawSecondHand(ctx);\n      drawMinuteHand(ctx);\n      drawHourHand(ctx);\n    } else {\n      drawBouncingClicks(ctx);\n      drawBouncingSeconds(ctx);\n      drawBouncingMins(ctx);\n      drawBouncingHours(ctx);\n    }\n\n    function drawBouncingClicks(ctx) {\n      let dotSize = size / 20;\n      let rads = Math.PI * 2 / 1000 * (props.click % 1000) - 0.5 * Math.PI;\n      let dotY = Math.sin(rads) * (size / 2 - dotSize) + size / 2;\n      ctx.beginPath();\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, dotSize * 2, size);\n      ctx.fillStyle = \"white\";\n      ctx.arc(dotSize, dotY, dotSize, 0, 6.2);\n      ctx.fill();\n      ctx.fillStyle = \"black\";\n      ctx.strokeRect(0, 0, 8 * dotSize, size);\n    }\n\n    function drawBouncingSeconds(ctx) {\n      let dotSize = size / 20;\n      let rads = Math.PI * 2 / (60 * 1000) * (props.click % (60 * 1000)) - 0.5 * Math.PI;\n      let dotY = Math.sin(rads) * (size / 2 - dotSize) + size / 2;\n\n      for (var i = 0; i <= 30; i++) {\n        let edgeAdjust = 0;\n        let sinAdjust = Math.sin(Math.PI * 2 / 30 * i - Math.PI) * ((size - dotSize) / 30);\n\n        if (i === 0) {\n          edgeAdjust = 1;\n        } else if (i === 30) {\n          edgeAdjust = -1;\n        }\n\n        ctx.moveTo(2 * dotSize, i * ((size - 2 * dotSize) / 30) + edgeAdjust + sinAdjust + dotSize);\n        ctx.lineTo(6 * dotSize, i * ((size - 2 * dotSize) / 30) + edgeAdjust + sinAdjust + dotSize);\n        ctx.stroke();\n      }\n\n      if (rads < .5 * Math.PI) {\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(2 * dotSize, dotY, 2 * dotSize, size - dotY - 1);\n        ctx.fillStyle = \"black\";\n      } else {\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(2 * dotSize, 1, 2 * dotSize, dotY);\n        ctx.fillStyle = \"black\";\n      }\n\n      ctx.beginPath();\n      ctx.arc(dotSize + 2 * dotSize, dotY, dotSize, 0, 6.2);\n      ctx.fill();\n    }\n\n    function drawBouncingMins(ctx) {\n      let dotSize = size / 20;\n      let rads = Math.PI * 2 / (60 * 60 * 1000) * (props.click % (60 * 60 * 1000)) - 0.5 * Math.PI;\n      ;\n      let dotY = Math.sin(rads) * (size / 2 - dotSize) + size / 2;\n\n      if (rads < .5 * Math.PI) {\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(4 * dotSize, dotY, 2 * dotSize, size - dotY - 1);\n        ctx.fillStyle = \"black\";\n      } else {\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(4 * dotSize, 1, 2 * dotSize, dotY);\n        ctx.fillStyle = \"black\";\n      }\n\n      ctx.beginPath();\n      ctx.arc(dotSize + 4 * dotSize, dotY, dotSize, 0, 6.2);\n      ctx.fill();\n    }\n\n    function drawBouncingHours(ctx) {\n      let dotSize = size / 20;\n      let rads = Math.PI * 2 / 24 * props.hour - 0.5 * Math.PI;\n      let dotY = Math.sin(rads) * (size / 2 - dotSize) + size / 2;\n\n      for (var i = 0; i <= 12; i++) {\n        let edgeAdjust = 0;\n        let sinAdjust = Math.sin(Math.PI * 2 / 12 * i - Math.PI) * (size / 12);\n\n        if (i === 0) {\n          edgeAdjust = 1;\n        } else if (i === 12) {\n          edgeAdjust = -1;\n        }\n\n        ctx.moveTo(6 * dotSize, i * ((size - 2 * dotSize) / 12) + edgeAdjust + sinAdjust + dotSize);\n        ctx.lineTo(8 * dotSize, i * ((size - 2 * dotSize) / 12) + edgeAdjust + sinAdjust + dotSize);\n        ctx.stroke();\n      }\n\n      if (rads < .5 * Math.PI) {\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(6 * dotSize, dotY, 2 * dotSize, size - dotY);\n        ctx.fillStyle = \"black\";\n      } else {\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(6 * dotSize, 0, 2 * dotSize, dotY);\n        ctx.fillStyle = \"black\";\n      }\n\n      ctx.beginPath();\n      ctx.arc(dotSize + 6 * dotSize, dotY, dotSize, 0, 6.2);\n      ctx.fill();\n    }\n\n    function drawRing(ctx) {\n      let lead = 360 / 1000 * (props.click % 1000 + outerLineLength) * Math.PI / 180 - 0.5 * Math.PI;\n      ctx.clearRect(0, 0, size, size);\n      ctx.beginPath();\n      ctx.lineWidth = outerLineWidth;\n      ctx.arc(size / 2, size / 2, size / 2 - outerLineWidth / 2, 360 / 1000 * (props.click % 1000) * Math.PI / 180 - 0.5 * Math.PI, lead);\n      ctx.stroke();\n    }\n    /* \n    // Deprecating for now \n     function drawSpinningDot(ctx) {\n      let xClick =\n        (size / 2 - size / 10) *\n          Math.cos(\n            ((360 / 1000) * (props.click % 1000) * Math.PI) / 180 -\n              0.5 * Math.PI\n          ) +\n        size / 2;\n      let yClick =\n        (size / 2 - size / 10) *\n          Math.sin(\n            ((360 / 1000) * (props.click % 1000) * Math.PI) / 180 -\n              0.5 * Math.PI\n          ) +\n        size / 2;\n      ctx.beginPath();\n      ctx.arc(xClick, yClick, size / 20, 0, 2 * Math.PI * (size / 10));\n      ctx.fill();\n    }\n     */\n\n\n    function drawSecondHand(ctx) {\n      let xSec = (size / 2 - secondHandDistance) * Math.cos(360 / 1000 * (props.click / 60) * Math.PI / 180 + 0.5 * Math.PI) + size / 2;\n      let ySec = (size / 2 - secondHandDistance) * Math.sin(360 / 1000 * (props.click / 60) * Math.PI / 180 + 0.5 * Math.PI) + size / 2;\n      ctx.beginPath();\n      ctx.arc(xSec, ySec, secondHandSize, 0, 2 * Math.PI * secondHandSize);\n      ctx.fill();\n    }\n\n    function drawMinuteHand(ctx) {\n      let xMin = (size / 2 - minuteHandDistance) * Math.cos(360 / 1000 * (props.click / 3600) * Math.PI / 180 + 0.5 * Math.PI) + size / 2;\n      let yMin = (size / 2 - minuteHandDistance) * Math.sin(360 / 1000 * (props.click / 3600) * Math.PI / 180 + +0.5 * Math.PI) + size / 2;\n      ctx.beginPath();\n      ctx.fillStyle = \"red\";\n      ctx.arc(xMin, yMin, minuteHandSize, 0, 2 * Math.PI * minuteHandSize);\n      ctx.fill();\n      ctx.fillStyle = \"black\";\n    }\n\n    function drawHourHand(ctx) {\n      let hourClick = props.hour % 12;\n      let hourRads = (hourClick + props.click / 3600000) * 30 * Math.PI / 180;\n      let xHour = size / 2 + Math.cos(hourRads - Math.PI * 0.5) * hourHandDistance - hourHandSize / 2;\n      let yHour = size / 2 + Math.sin(hourRads - Math.PI * 0.5) * hourHandDistance - hourHandSize / 2;\n      ctx.beginPath();\n      var hourDotCenterX = xHour + hourHandSize / 2;\n      var hourDotCenterY = yHour + hourHandSize / 2;\n      ctx.translate(hourDotCenterX, hourDotCenterY);\n      ctx.rotate(hourRads + 45 * Math.PI / 180);\n      ctx.translate(-hourDotCenterX, -hourDotCenterY);\n      ctx.fillRect(xHour + hourHandSize / 2, yHour + hourHandSize / 2, hourHandSize, hourHandSize);\n    }\n  }, [props.click, props.hour, clockStyle, props.size]);\n  useEffect(() => {\n    draw();\n  }, [draw]);\n\n  function handleStyleChange(e) {\n    setClockStyle(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mainInterface\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"Clock Style\",\n      onChange: handleStyleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"Abstract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"Bouncing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"clockWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: clockClass,\n        id: \"clock\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClockUI, \"TCitpYrHltlSwqmi+sngczwSh2Y=\");\n\n_c = ClockUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClockUI\");","map":{"version":3,"sources":["/Users/christiancurry/Documents/abstract_clock/src/ClockUI.js"],"names":["React","useEffect","useState","useCallback","ClockUI","props","clockClass","isWider","clockStyle","setClockStyle","draw","size","outerLineWidth","outerLineLength","secondHandSize","secondHandDistance","minuteHandSize","minuteHandDistance","hourHandSize","Math","PI","hourHandDistance","can","document","getElementById","ctx","getContext","canvas","width","height","drawRing","drawSecondHand","drawMinuteHand","drawHourHand","drawBouncingClicks","drawBouncingSeconds","drawBouncingMins","drawBouncingHours","dotSize","rads","click","dotY","sin","beginPath","fillStyle","fillRect","arc","fill","strokeRect","i","edgeAdjust","sinAdjust","moveTo","lineTo","stroke","hour","lead","clearRect","lineWidth","xSec","cos","ySec","xMin","yMin","hourClick","hourRads","xHour","yHour","hourDotCenterX","hourDotCenterY","translate","rotate","handleStyleChange","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\n\nexport default function ClockUI(props) {\n  let clockClass = \"error\"\n  if(props.isWider) {\n    clockClass = \"wideClock\"\n  } else {\n    clockClass = \"tallClock\"\n  }\n\n  const [clockStyle, setClockStyle] = useState(1);\n\n  const draw = useCallback(() => {\n    let size = props.size * 2;\n\n    let outerLineWidth = size / 180;\n    let outerLineLength = 80;\n\n    let secondHandSize = size / 30;\n    let secondHandDistance = size - secondHandSize;\n\n    let minuteHandSize = secondHandSize * 2;\n    let minuteHandDistance = size - secondHandSize * 2 - minuteHandSize;\n\n    let hourHandSize = minuteHandSize * (Math.PI / 2);\n    let hourHandDistance = size / 2 - secondHandSize * 2 - minuteHandSize;\n\n    let can = document.getElementById(\"clock\");\n    let ctx = can.getContext(\"2d\");\n    ctx.canvas.width = size;\n    ctx.canvas.height = size;\n\n    if(clockStyle == 1 ) {\n      //This is the spinning outer ring\n      drawRing(ctx);\n\n      //Spinning dot is annoying ish\n      //It Matches the spinning ring but seems excessive\n      //drawSpinningDot(ctx);\n\n      drawSecondHand(ctx);\n      drawMinuteHand(ctx);\n      drawHourHand(ctx);\n\n    } else {\n      drawBouncingClicks(ctx);\n      drawBouncingSeconds(ctx);\n      drawBouncingMins(ctx);\n      drawBouncingHours(ctx);\n    }\n\n    function drawBouncingClicks(ctx) {\n      let dotSize = size/20;\n      let rads = (Math.PI * 2)/(1000) * (props.click%1000) - 0.5 * Math.PI;\n      let dotY = (Math.sin(rads) * (size / 2 - dotSize) ) + size/2 ;\n      ctx.beginPath();\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, dotSize * 2, size);\n      ctx.fillStyle = \"white\";\n      ctx.arc(dotSize, dotY , dotSize, 0, 6.2);\n      ctx.fill();\n      ctx.fillStyle = \"black\";\n      ctx.strokeRect(0,0,8*dotSize,size);\n    }\n\n    function drawBouncingSeconds(ctx) {\n      let dotSize = size/20;\n      let rads = (Math.PI * 2)/(60*1000) * (props.click%(60*1000)) - 0.5 * Math.PI;\n      let dotY = (Math.sin(rads) * (size / 2 - dotSize) ) + size/2 ;\n      for(var i = 0; i <=30; i++) {\n        let edgeAdjust = 0;\n        let sinAdjust = Math.sin((Math.PI * 2)/30 * i -  Math.PI) * ((size - dotSize  )/30);\n        if(i === 0) {\n          edgeAdjust = 1;\n        } else if (i ===30) {\n          edgeAdjust = -1;\n        }\n        ctx.moveTo(2*dotSize, i*((size - 2 * dotSize)/30)+edgeAdjust+sinAdjust + dotSize);\n        ctx.lineTo(6*dotSize, i*((size - 2 * dotSize)/30)+edgeAdjust+sinAdjust + dotSize);\n        ctx.stroke();\n      }\n      if (rads < .5 *Math.PI) {\n        ctx.fillStyle=\"white\";\n        ctx.fillRect(2*dotSize, dotY, 2*dotSize, size-dotY - 1);\n        ctx.fillStyle=\"black\";\n      } else {\n        ctx.fillStyle=\"white\";\n        ctx.fillRect(2*dotSize, 1, 2*dotSize, dotY);\n        ctx.fillStyle=\"black\";\n      }\n      ctx.beginPath();\n      ctx.arc(dotSize + 2*dotSize, dotY , dotSize, 0, 6.2);\n      ctx.fill();\n    }\n\n    function drawBouncingMins(ctx) {\n      let dotSize = size/20;\n      let rads = (Math.PI * 2)/(60*60*1000) * (props.click%(60*60*1000)) - 0.5 * Math.PI;;\n      let dotY = (Math.sin(rads) * (size / 2 - dotSize) ) + size/2 ;\n      if (rads < .5 *Math.PI) {\n        ctx.fillStyle=\"white\";\n        ctx.fillRect(4*dotSize, dotY, 2*dotSize, size-dotY - 1);\n        ctx.fillStyle=\"black\";\n      } else {\n        ctx.fillStyle=\"white\";\n        ctx.fillRect(4*dotSize, 1, 2*dotSize, dotY);\n        ctx.fillStyle=\"black\";\n      }\n      ctx.beginPath();\n      ctx.arc(dotSize + 4*dotSize, dotY , dotSize, 0, 6.2);\n      ctx.fill();\n      \n    }\n\n    function drawBouncingHours(ctx) {\n      let dotSize = size/20;\n      let rads = (Math.PI * 2)/(24) * (props.hour) - 0.5 * Math.PI;\n      let dotY = (Math.sin(rads) * (size / 2 - dotSize) ) + size/2 ;\n      for(var i = 0; i <=12; i++) {\n        let edgeAdjust = 0;\n        let sinAdjust = Math.sin((Math.PI * 2)/12 * i -  Math.PI) * (size/12);\n        if(i === 0) {\n          edgeAdjust = 1;\n        } else if (i === 12) {\n          edgeAdjust = -1;\n        }\n        ctx.moveTo(6*dotSize, i*((size - 2 * dotSize)/12)+edgeAdjust+sinAdjust+dotSize);\n        ctx.lineTo(8*dotSize, i*((size - 2 * dotSize)/12)+edgeAdjust+sinAdjust+dotSize);\n        ctx.stroke();\n        \n      }\n      if (rads < .5 *Math.PI) {\n        ctx.fillStyle=\"white\";\n        ctx.fillRect(6*dotSize, dotY, 2*dotSize, size-dotY);\n        ctx.fillStyle=\"black\";\n      } else {\n        ctx.fillStyle=\"white\";\n        ctx.fillRect(6*dotSize, 0, 2*dotSize, dotY);\n        ctx.fillStyle=\"black\";\n      }\n      ctx.beginPath();\n      ctx.arc(dotSize + 6*dotSize, dotY , dotSize, 0, 6.2);\n      ctx.fill();\n     \n    }\n\n    function drawRing(ctx) {\n      let lead =\n        ((360 / 1000) * ((props.click % 1000) + outerLineLength) * Math.PI) /\n          180 -\n        0.5 * Math.PI;\n      ctx.clearRect(0, 0, size, size);\n      ctx.beginPath();\n      ctx.lineWidth = outerLineWidth;\n      ctx.arc(\n        size / 2,\n        size / 2,\n        size / 2 - outerLineWidth / 2,\n        ((360 / 1000) * (props.click % 1000) * Math.PI) / 180 - 0.5 * Math.PI,\n        lead\n      );\n      ctx.stroke();\n    }\n\n    /* \n    // Deprecating for now \n\n    function drawSpinningDot(ctx) {\n      let xClick =\n        (size / 2 - size / 10) *\n          Math.cos(\n            ((360 / 1000) * (props.click % 1000) * Math.PI) / 180 -\n              0.5 * Math.PI\n          ) +\n        size / 2;\n      let yClick =\n        (size / 2 - size / 10) *\n          Math.sin(\n            ((360 / 1000) * (props.click % 1000) * Math.PI) / 180 -\n              0.5 * Math.PI\n          ) +\n        size / 2;\n      ctx.beginPath();\n      ctx.arc(xClick, yClick, size / 20, 0, 2 * Math.PI * (size / 10));\n      ctx.fill();\n    }\n\n    */\n\n    function drawSecondHand(ctx) {\n      let xSec =\n        (size / 2 - secondHandDistance) *\n          Math.cos(\n            ((360 / 1000) * (props.click / 60) * Math.PI) / 180 + 0.5 * Math.PI\n          ) +\n        size / 2;\n      let ySec =\n        (size / 2 - secondHandDistance) *\n          Math.sin(\n            ((360 / 1000) * (props.click / 60) * Math.PI) / 180 + 0.5 * Math.PI\n          ) +\n        size / 2;\n\n      ctx.beginPath();\n      ctx.arc(xSec, ySec, secondHandSize, 0, 2 * Math.PI * secondHandSize);\n      ctx.fill();\n    }\n\n    function drawMinuteHand(ctx) {\n      let xMin =\n        (size / 2 - minuteHandDistance) *\n          Math.cos(\n            ((360 / 1000) * (props.click / 3600) * Math.PI) / 180 +\n              0.5 * Math.PI\n          ) +\n        size / 2;\n      let yMin =\n        (size / 2 - minuteHandDistance) *\n          Math.sin(\n            ((360 / 1000) * (props.click / 3600) * Math.PI) / 180 +\n              +0.5 * Math.PI\n          ) +\n        size / 2;\n\n      ctx.beginPath();\n      ctx.fillStyle = \"red\";\n      ctx.arc(xMin, yMin, minuteHandSize, 0, 2 * Math.PI * minuteHandSize);\n      ctx.fill();\n      ctx.fillStyle = \"black\";\n    }\n\n    function drawHourHand(ctx) {\n      let hourClick = props.hour % 12;\n      let hourRads = ((hourClick + props.click / 3600000) * 30 * Math.PI) / 180;\n      let xHour =\n        size / 2 +\n        Math.cos(hourRads - Math.PI * 0.5) * hourHandDistance -\n        hourHandSize / 2;\n      let yHour =\n        size / 2 +\n        Math.sin(hourRads - Math.PI * 0.5) * hourHandDistance -\n        hourHandSize / 2;\n\n      ctx.beginPath();\n      var hourDotCenterX = xHour + hourHandSize / 2;\n      var hourDotCenterY = yHour + hourHandSize / 2;\n      ctx.translate(hourDotCenterX, hourDotCenterY);\n      ctx.rotate(hourRads + (45 * Math.PI) / 180);\n      ctx.translate(-hourDotCenterX, -hourDotCenterY);\n      ctx.fillRect(\n        xHour + hourHandSize / 2,\n        yHour + hourHandSize / 2,\n        hourHandSize,\n        hourHandSize\n      );\n    }\n  }, [props.click, props.hour, clockStyle, props.size]);\n\n  useEffect(() => {\n    draw();\n  }, [draw]);\n\n  function handleStyleChange(e){\n    setClockStyle(e.target.value);\n  }\n\n  return (\n    <div id=\"mainInterface\" >\n      <select name=\"Clock Style\" onChange={handleStyleChange}>\n        <option value=\"1\">Abstract</option>\n        <option value=\"2\">Bouncing</option>\n      </select>\n      <div id=\"clockWrapper\">\n        <canvas className={clockClass} id=\"clock\" > </canvas>\n      </div>\n    </div>\n\n  );\n  \n  \n}\n"]},"metadata":{},"sourceType":"module"}